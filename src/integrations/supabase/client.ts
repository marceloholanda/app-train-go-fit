
// This file is automatically generated. Do not edit it directly.
// Mock Supabase client for compatibility purposes
// This is a placeholder until proper Supabase integration is implemented

const mockSupabase = {
  auth: {
    getUser: async () => ({ data: { user: null }, error: null }),
    getSession: async () => ({ data: { session: null }, error: null }),
    signIn: async () => ({ data: null, error: { message: "Not implemented in mock client" } }),
    signUp: async () => ({ data: null, error: { message: "Not implemented in mock client" } }),
    signOut: async () => ({ error: null }),
    onAuthStateChange: () => ({ data: { subscription: { unsubscribe: () => {} } } })
  },
  from: (table: string) => ({
    select: () => ({
      eq: () => ({
        single: async () => ({ data: null, error: null }),
        maybeSingle: async () => ({ data: null, error: null }),
        order: () => ({
          limit: () => ({
            then: async () => ({ data: [], error: null })
          })
        })
      }),
      order: () => ({
        limit: () => ({
          then: async () => ({ data: [], error: null })
        })
      })
    }),
    insert: () => ({
      select: () => ({
        single: async () => ({ data: null, error: null })
      })
    }),
    update: () => ({
      eq: () => ({
        then: async () => ({ data: null, error: null })
      })
    }),
    upsert: () => ({
      then: async () => ({ data: null, error: null })
    })
  }),
  storage: {
    from: (bucket: string) => ({
      upload: async () => ({ data: null, error: { message: "Not implemented in mock client" } }),
      getPublicUrl: () => ({ data: { publicUrl: "" } })
    })
  }
};

export const supabase = mockSupabase as any;
